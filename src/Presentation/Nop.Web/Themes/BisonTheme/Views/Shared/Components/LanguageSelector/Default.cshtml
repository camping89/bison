@model LanguageSelectorModel
@using Microsoft.AspNetCore.Http
@using System.Net
@using Nop.Core
@inject IWebHelper webHelper
@inject IHttpContextAccessor httpContextAccessor
@if (Model.AvailableLanguages.Count > 1)
{
    @*<div class="language-selector">
    @{
        var rawUrl = webHelper.GetRawUrl(httpContextAccessor.HttpContext.Request);

        if (Model.UseImages)
        {
            <ul class="language-list">
                @foreach (var lang in Model.AvailableLanguages)
                {
                    <li>
                        <a href="@webHelper.ModifyQueryString(Url.RouteUrl("ChangeLanguage", new {langid = lang.Id}), "returnurl=" + WebUtility.UrlEncode(rawUrl), null)" title="@lang.Name">
                            <img title='@lang.Name' alt='@lang.Name' @(lang.Id == Model.CurrentLanguageId ? " class=selected" : null)
                                 src="@Url.Content("~/images/flags/" + @lang.FlagImageFileName) "/>
                        </a>
                    </li>
                }
            </ul>
        }
        else
        {
            var languages = Model.AvailableLanguages.Select(lang => new SelectListItem
            {
                Text = lang.Name,
                Value = webHelper.ModifyQueryString(Url.RouteUrl("ChangeLanguage", new { langid = lang.Id }), "returnurl=" + WebUtility.UrlEncode(rawUrl), null),
                Selected = lang.Id.Equals(Model.CurrentLanguageId)
            });

            <select id="customerlanguage" name="customerlanguage" asp-items="@languages" onchange="setLocation(this.value);"></select>
        }
    }
    </div>*@

    <div class="language-box">
        @{
            var rawUrl = webHelper.GetRawUrl(httpContextAccessor.HttpContext.Request);
            var currencies = Model.AvailableLanguages.Select(lang => new {
                Text = lang.Name,
                Value = webHelper.ModifyQueryString(Url.RouteUrl("ChangeLanguage", new { langid = lang.Id }), "returnurl=" + WebUtility.UrlEncode(rawUrl), null),
                Selected = lang.Id.Equals(Model.CurrentLanguageId),
                FlagImageFileName = lang.FlagImageFileName
            }).ToList();

        }
        @foreach (var item in currencies.Where(x => x.Selected))
        {
            <a href="@item.Value" class="language-current black"><img src="@Url.Content("~/images/flags/" + item.FlagImageFileName)" alt=""><span>@item.Text</span><i class="fa fa-angle-down" aria-hidden="true"></i></a>
        }
        <ul class="language-list list-none text-left">
            @foreach (var item in currencies.Where(x => !x.Selected))
            {
                <li><a href="@item.Value"><img src="@Url.Content("~/images/flags/" + item.FlagImageFileName)" alt=""><span>@item.Text</span></a></li>
            }
        </ul>
    </div>
}
        
