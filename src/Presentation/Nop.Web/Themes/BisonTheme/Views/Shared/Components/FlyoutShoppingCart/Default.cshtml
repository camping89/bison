@model MiniShoppingCartModel
@using Nop.Core
@using Nop.Services.Helpers
@using Nop.Web.Framework.UI
@inject IWorkContext workContext
@inject IThemeContext themeContext
@inject IUserAgentHelper userAgentHelper
@{
    var themeName = themeContext.WorkingThemeName;
}
<div class="mini-cart-box pull-right">
    <a class="mini-cart-link title12" href="@(Url.RouteUrl("ShoppingCart"))">
        <span class="mini-cart-icon inline-block"><img src="@Url.Content($"~/Themes/{themeName}/Content/images/icons/icon-cart.png")" alt="" /><sup class="bg-color white round">@Model.TotalProducts</sup></span>
        <span class="mini-cart-number  black inline-block text-right">@T("ShoppingCart.Totals.SubTotal"): <br>@Model.TotalProducts @T("ShoppingCart.ProductUnit.Label")</span>
    </a>
    <div class="mini-cart-content text-left">
        <h2 class="title18">@Model.TotalProducts @T("ShoppingCart.ProductItem.Label")</h2>
        <div class="list-mini-cart-item">
            @if (Model.TotalProducts > 0)
            {
                foreach (var item in Model.Items)
                {
                    <div class="product-mini-cart table">
                        <div class="product-thumb">
                            <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })" title="@item.Picture.Title" class="product-thumb-link">
                                @if (Model.ShowProductImages)
                                {
                                    <img alt="@item.Picture.AlternateText" src="@item.Picture.ImageUrl" title="@item.Picture.Title" />
                                }
                            </a>
                        </div>
                        <div class="product-info">
                            <h3 class="product-title title14">
                                <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })">@item.ProductName</a>
                            </h3>
                            <div class="product-price">
                                <ins><span class="title14 color">@T("ShoppingCart.Mini.UnitPrice"): @item.UnitPrice</span></ins>
                            </div>
                            <div class="product-rate">
                                <div class="product-rating" style="width: 100%"></div>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
        <div class="mini-cart-total clearfix">
            <strong class="pull-left title18">@T("ShoppingCart.Totals.SubTotal")</strong>
            <span class="pull-right color title18">@Model.SubTotal</span>
        </div>
        <div class="mini-cart-button">
            @if (Model.DisplayShoppingCartButton)
            {
                <a class="mini-cart-view shop-button" href="@(Url.RouteUrl("ShoppingCart"))">@T("ShoppingCart.Mini.ViewCart")</a>
            }
            @if (Model.DisplayCheckoutButton)
            {
                var checkoutUrl = "";
                if (Model.AnonymousCheckoutAllowed && Model.CurrentCustomerIsGuest)
                {
                    checkoutUrl = Url.RouteUrl("LoginCheckoutAsGuest", new { returnUrl = Url.RouteUrl("ShoppingCart") });
                }
                else
                {
                    checkoutUrl = Url.RouteUrl("Checkout");
                }
                <a class="mini-cart-checkout shop-button" href="@checkoutUrl">@T("Checkout.Button")</a>
            }
        </div>
    </div>
</div>