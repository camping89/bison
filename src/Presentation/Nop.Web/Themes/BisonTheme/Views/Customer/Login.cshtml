@model LoginModel
@using System.Net
@using Nop.Core
@inject IWebHelper webHelper
@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(T("PageTitle.Login").Text);
    //page class
    Html.AppendPageCssClassParts("html-login-page");

    //register URL with return URL (if specified)
    var registerUrl = Url.RouteUrl("Register");
    if (!string.IsNullOrEmpty(this.Context.Request.Query["returnUrl"]))
    {
        registerUrl = webHelper.ModifyQueryString(registerUrl, "returnurl=" + WebUtility.UrlEncode(this.Context.Request.Query["returnUrl"]), null);
    }
}

<div class="content-page woocommerce">
    <div class="container content-about ">
        <h2 class="title30 dosis-font font-bold text-uppercase text-center dark">Member</h2>
        <div class="row">
            <div class="col-md-12">
                <div class="register-content-box">
                    <div class="row">
                        <div class="col-md-6 col-sm-6 col-ms-12">
                            <div class="check-billing">
                                <div class="form-my-account">
                                    <form class="block-login">
                                        <h2 class="title24 title-form-account">Login</h2>
                                        <p>
                                            <label>Username or email address <span class="required">*</span></label>
                                            <input type="text" name="username" />
                                        </p>
                                        <p>
                                            <label>Password <span class="required">*</span></label>
                                            <input type="text" name="password" />
                                        </p>
                                        <p>
                                            <input type="submit" class="register-button" name="login" value="Login">
                                        </p>
                                        <div class="table create-account">
                                            <div class="text-left">
                                                <p>
                                                    <input type="checkbox" id="remember" /> <label for="remember">Remember me</label>
                                                </p>
                                            </div>
                                            <div class="text-right">
                                                <a href="#" class="color">Lost your password?</a>
                                            </div>
                                        </div>
                                        <h2 class="title18 social-login-title">Or login with</h2>
                                        <div class="social-login-block table text-center">
                                            <div class="social-login-btn">
                                                <a href="#" class="login-fb-link">Facebook</a>
                                            </div>
                                            <div class="social-login-btn">
                                                <a href="#" class="login-goo-link">Google</a>
                                            </div>
                                        </div>
                                    </form>
                                    <form class="block-register">
                                        <h2 class="title24 title-form-account">REGISTER</h2>
                                        <p>
                                            <label>Username <span class="required">*</span></label>
                                            <input type="text" name="username" />
                                        </p>
                                        <p>
                                            <label>Email address <span class="required">*</span></label>
                                            <input type="text" name="password" />
                                        </p>
                                        <p>
                                            <label>Password <span class="required">*</span></label>
                                            <input type="text" name="password" />
                                        </p>
                                        <p>
                                            <input type="submit" class="register-button" name="register" value="Register">
                                        </p>
                                    </form>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6 col-sm-6 col-ms-12">
                            <div class="check-address">
                                <div class="form-my-account check-register text-center">
                                    <h2 class="title24 title-form-account">Register</h2>
                                    <p class="desc">Registering for this site allows you to access your order status and history. Just fill in the fields below, and we’ll get a new account set up for you in no time. We will only ask you for information necessary to make the purchase process faster and easier.</p>
                                    <a href="#" class="shop-button bg-color login-to-register" data-login="Login" data-register="Register">Register</a>
                                    <p class="desc title12 silver"><i>Click to switch Register/Login</i></p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- End Content Page -->

<div class="page login-page">
    <div class="page-title">
        <h1>@T("Account.Login.Welcome")</h1>
    </div>
    @await Html.PartialAsync("_ExternalAuthentication.Errors")
    <div class="page-body">
        <div class="customer-blocks">
            @if (Model.CheckoutAsGuest)
            {
                <div class="new-wrapper checkout-as-guest-or-register-block">
                    <div class="title">
                        <strong>@T("Account.Login.CheckoutAsGuestOrRegister")</strong>
                    </div>
                    <div class="text">
                        @await Component.InvokeAsync("TopicBlock", new { systemName = "CheckoutAsGuestOrRegister" })
                    </div>
                    <div class="buttons">
                        <input type="button" class="button-1 checkout-as-guest-button" onclick="location.href='@Url.RouteUrl("Checkout")'" value="@T("Account.Login.CheckoutAsGuest")" />
                        <input type="button" class="button-1 register-button" onclick="location.href='@registerUrl'" value="@T("Account.Register")" />
                    </div>
                </div>
            }
            else
            {
                <div class="new-wrapper register-block">
                    <div class="title">
                        <strong>@T("Account.Login.NewCustomer")</strong>
                    </div>
                    <div class="text">
                        @T("Account.Login.NewCustomerText")
                    </div>
                    <div class="buttons">
                        <input type="button" class="button-1 register-button" onclick="location.href='@registerUrl'" value="@T("Account.Register")" />
                    </div>
                </div>
            }
            <div class="returning-wrapper fieldset">
                <form asp-route="Login" asp-route-returnurl="@Context.Request.Query["ReturnUrl"]" method="post">
                    <div asp-validation-summary="ModelOnly" class="message-error">@T("Account.Login.Unsuccessful")</div>
                    <div class="title">
                        <strong>@T("Account.Login.ReturningCustomer")</strong>
                    </div>
                    <div class="form-fields">
                        @if (Model.UsernamesEnabled)
                        {
                            <div class="inputs">
                                <label asp-for="Username" asp-postfix=":"></label>
                                <input asp-for="Username" class="username" autofocus="autofocus" />
                                <span asp-validation-for="Username"></span>
                            </div>
                        }
                        else
                        {
                            <div class="inputs">
                                <label asp-for="Email" asp-postfix=":"></label>
                                <input asp-for="Email" class="email" autofocus="autofocus" />
                                <span asp-validation-for="Email"></span>
                            </div>
                        }
                        <div class="inputs">
                            <label asp-for="Password" asp-postfix=":"></label>
                            <input asp-for="Password" class="password" />
                            <span asp-validation-for="Password"></span>
                        </div>
                        <div class="inputs reversed">
                            <input asp-for="RememberMe" />
                            <label asp-for="RememberMe"></label>
                            <span class="forgot-password">
                                <a asp-route="PasswordRecovery">@T("Account.Login.ForgotPassword")</a>
                            </span>
                        </div>
                        @if (Model.DisplayCaptcha)
                        {
                            <div class="captcha-box">
                                <nop-captcha />
                            </div>
                        }
                    </div>
                    <div class="buttons">
                        <input class="button-1 login-button" type="submit" value="@T("Account.Login.LoginButton")" />
                    </div>
                </form>
            </div>
        </div>
        <div class="external-authentication">
            @await Component.InvokeAsync("ExternalMethods", "ExternalAuthentication")
        </div>
        @await Component.InvokeAsync("TopicBlock", new { systemName = "LoginRegistrationInfo" })
    </div>
</div>