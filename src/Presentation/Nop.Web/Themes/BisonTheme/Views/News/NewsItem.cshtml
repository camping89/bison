@model NewsItemModel
@{
    Layout = "_ColumnsTwoNews";

    //title
    Html.AddTitleParts(!string.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Title);
    //meta
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);
    //page class
    Html.AppendPageCssClassParts("html-news-item-page");
}

@section Breadcrumb
    {
    <div class="bread-crumb">
        <a href="@Url.RouteUrl("HomePage")" class="silver" title="@T("News.Breadcrumb.Top")">@T("News.Breadcrumb.Top")</a>
        <strong class="color">@Model.Title</strong>
    </div>
}

<div class="content-single">
    <h2 class="title18 title-box5">@T("News.Breadcrumb.Top")</h2>
    <div class="post-title-date">
        <div class="postdate">
            <strong class="title30">@Model.CreatedOn.Day</strong>
            <span class="title12">@Model.CreatedOn.Month @Model.CreatedOn.Year</span>
        </div>
        <div class="post-title-comment">
            <h2 class="title14">@Model.Title</h2>
            <ul class="list-inline-block">
                <li><span>@Model.Comments.Count</span><a href="#comment" class="silver"> @T("News.Comments")</a></li>
            </ul>
        </div>
    </div>
    <div class="single-banner banner-adv zoom-image fade-out-in">
        <a href="#" class="adv-thumb-link"><img src="@Model.ImageUrl" alt="@Model.Title"></a>
    </div>
    <div class="news-content desc">@Html.Raw(Model.Full)</div>

    @*<div class="post-social-share">
            <p>Share this post with the world!</p>
            <ul class="list-inline-block">
                <li><a href="#" class="silver"><i class="fa fa-facebook" aria-hidden="true"></i></a></li>
                <li><a href="#" class="silver"><i class="fa fa-linkedin" aria-hidden="true"></i></a></li>
                <li><a href="#" class="silver"><i class="fa fa-twitter" aria-hidden="true"></i></a></li>
                <li><a href="#" class="silver"><i class="fa fa-google-plus" aria-hidden="true"></i></a></li>
                <li><a href="#" class="silver"><i class="fa fa-pinterest" aria-hidden="true"></i></a></li>
            </ul>
        </div>*@
    <div class="comment-list">
        <h2 class="title18">@Model.Comments.Count @T("News.Comments")</h2>
        <ol>
            @foreach (var comment in Model.Comments)
            {
                <li>
                    <div class="item-comment">
                        @if (!string.IsNullOrEmpty(comment.CustomerAvatarUrl))
                        {
                            <div class="author-avatar">
                                @if (comment.AllowViewingProfiles)
                                {
                                    <a href="@Url.RouteUrl("CustomerProfile", new { id = comment.CustomerId })" class="avatar-img-link">
                                        <img src="@(comment.CustomerAvatarUrl)" class="avatar-img" alt="avatar" />
                                    </a>
                                }
                                else
                                {
                                    <img src="@(comment.CustomerAvatarUrl)" class="avatar-img" alt="avatar" />
                                }

                            </div>
                        }

                        <div class="comment-info">
                            <h3 class="title14"><a href="@Url.RouteUrl("CustomerProfile", new {id = comment.CustomerId})">@(comment.CustomerName)</a></h3>
                            <ul class="post-date-comment">
                                <li><span>@comment.CreatedOn.ToString("g")</span></li>
                            </ul>
                            <div class="comment-title">
                                <strong class="comment-text">@comment.CommentTitle</strong>
                            </div>
                            <p class="desc"> @Html.Raw(Nop.Core.Html.HtmlHelper.FormatText(comment.CommentText, false, true, false, false, false, false))</p>
                        </div>
                    </div>
                </li>

            }

        </ol>
    </div>
    <div class="leave-comment">
        <h2 class="title18">@T("News.Comments.LeaveYourComment")</h2>
        <div class="notifications">
            <div asp-validation-summary="ModelOnly" class="message-error"></div>
            @{
                var result = TempData["nop.news.addcomment.result"] as string;
            }
            @if (!string.IsNullOrEmpty(result))
            {
                <div class="result">@result</div>
            }
        </div>
        <form asp-route="NewsItem" asp-route-sename="@Model.SeName" method="post" class="comment-form">
            <input asp-for="AddNewComment.CommentTitle" class="border radius4" onblur="if (this.value=='') this.value = this.defaultValue" onfocus="if (this.value==this.defaultValue) this.value = ''" value="@T("AddNewComment.CommentTitle")" />
            <span asp-validation-for="AddNewComment.CommentTitle"></span>
            <textarea class="border radius4" onblur="if (this.value=='') this.value = this.defaultValue" onfocus="if (this.value==this.defaultValue) this.value = ''" id="AddNewComment_CommentText" name="AddNewComment.CommentText">@T("News.Comments")</textarea>
            <span asp-validation-for="AddNewComment.CommentText"></span>
            <div class="form-fields">
                @if (Model.AddNewComment.DisplayCaptcha)
                {
                    <div class="captcha-box">
                        <nop-captcha />
                    </div>
                }
            </div>
            <div class="buttons">
                <input type="submit" name="add-comment" class="radius4 shop-button" value="@T("News.Comments.SubmitButton")" />
            </div>
        </form>
    </div>
    @await Component.InvokeAsync("Widget", new { widgetZone = "newsitem_page_after_comments", additionalData = Model.Id })
</div>

