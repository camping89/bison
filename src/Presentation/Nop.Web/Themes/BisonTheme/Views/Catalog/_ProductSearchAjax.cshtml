@model Nop.Web.Models.Catalog.SearchModel
@{
    Layout = null;

}
<div class="page-body">


    @await Component.InvokeAsync("Widget", new { widgetZone = "productsearch_page_before_results" })

    <div class="search-results">
        @if (!string.IsNullOrEmpty(Model.Warning))
        {
            <div class="warning">
                @Model.Warning
            </div>
        }
        @if (Model.NoResults)
        {
            <div class="no-result">
                @T("Search.NoResultsText")
            </div>
        }

        @if (Model.Products.Count > 0)
        {
            if (Model.PagingFilteringContext.ViewMode == "list")
            {
                <div class="list-shop-product">

                    @foreach (var product in Model.Products)
                    {
                        @await Html.PartialAsync("_ProductBoxListView", product)

                    }

                </div>
            }
            else
            {
                <div class="grid-shop-product">
                    <div class="row">
                        @foreach (var product in Model.Products)
                        {
                            <div class="col-md-4 col-sm-6 col-xs-6">
                                @await Html.PartialAsync("_ProductBoxFullHeight", product)
                            </div>
                        }
                    </div>
                </div>
            }

        }
        @{
            var pager = Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber").BooleanParameterName("adv").BooleanParameterName("isc").BooleanParameterName("sid").RenderEmptyParameters(true);
        }
        @if (!pager.IsEmpty())
        {
            <div class="pager">
                @pager
            </div>
        }
    </div>
    @await Component.InvokeAsync("Widget", new { widgetZone = "productsearch_page_after_results" })
</div>