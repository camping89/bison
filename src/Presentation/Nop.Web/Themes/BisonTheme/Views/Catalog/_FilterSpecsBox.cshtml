@using Newtonsoft.Json
@using Nop.Core.Extensions
@model CatalogPagingFilteringModel.SpecificationFilterModel
@{
    //var notFilteredItemsGroups = Model.NotFilteredItems.GroupBy(x => x.SpecificationAttributeName);
    //var alreadyFilteredItemsGroups = Model.AlreadyFilteredItems.GroupBy(x => x.SpecificationAttributeName);
    var allFilterableItemsGroups = Model.AllFilterableItems.GroupBy(x => x.SpecificationAttributeName).OrderBy(_ => _.Key);
}

@if (Model.AllFilterableItems.Count > 0)
{
    var groupIndex = 1;

    foreach (var group in allFilterableItemsGroups)
    {
        var groupList = group.ToList();
        if (groupList.Count > 0)
        {
            <div id="group_@groupIndex" class="filter-group">
                <h3 class="title14">@groupList[0].SpecificationAttributeName</h3>
                @if (groupList.Count > 15)
                {
                    <div id="search_specs">
                        <input id="search_spec_input_@groupIndex" class="search_spec_input" placeholder="@T("SearchSpecInput")" type="text" />
                    </div>
                }

                <div class="@(groupList.Count > 15 || groupList.Any(x => x.SpecificationAttributeOptionBreadcrumb.Length > 30) ? "filter-group-attributes" : string.Empty)">
                    <div class="filter-attributes" style="@(groupList.Any(x => x.SpecificationAttributeOptionBreadcrumb.Length > 30) ? "max-height: auto;width: 400px; padding-top: 10px;" : string.Empty)">
                        @foreach (var spec in groupList.OrderBy(_ => _.SpecificationAttributeOptionBreadcrumb))
                        {
                            if (groupList.Any(x => !string.IsNullOrEmpty(x.SpecificationAttributeOptionColorRgb)))
                            {
                                <div class="check_specs_data_@groupIndex checkbox">
                                    <input data-type="chk_spec_" id="chk_spec_@spec.SpecificationAttributeOptionId" class="SpecCheckbox checkbox" name="chk_spec_@spec.SpecificationAttributeOptionId" value="@spec.SpecificationAttributeOptionId" type="checkbox" @(spec.SpecificationAttributeOptionId.IsIn(Model.CurrentSpecsFiltered) ? "checked" : string.Empty) />
                                    <label for="chk_spec_@spec.SpecificationAttributeOptionId">
                                        <div class="attribute-square" style="background-color: @spec.SpecificationAttributeOptionColorRgb"></div><span>@spec.SpecificationAttributeOptionBreadcrumb.Replace(">>", "")</span>
                                    </label>
                                </div>
                            }
                            else
                            {
                                <div class="check_specs_data_@groupIndex checkbox">
                                    <input data-type="chk_spec_" id="chk_spec_@spec.SpecificationAttributeOptionId" class="SpecCheckbox checkbox" name="chk_spec_@spec.SpecificationAttributeOptionId" value="@spec.SpecificationAttributeOptionId" type="checkbox" @(spec.SpecificationAttributeOptionId.IsIn(Model.CurrentSpecsFiltered) ? "checked" : string.Empty) />
                                    <label for="chk_spec_@spec.SpecificationAttributeOptionId"><span>@(spec.SpecificationAttributeOptionBreadcrumb.Replace(">>", ""))</span></label>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
            <script type="text/javascript">
                $(function () {
                    $("#search_spec_input_@groupIndex").on("keydown, keyup", function () {
                        var textSearch = $(this).val().trim();
                        if (textSearch !== '') {
                            $(".check_specs_data_@groupIndex > label > span:not(:contains('" + textSearch + "'))").parent().parent().hide();
                        } else {
                            $(".check_specs_data_@groupIndex").show();
                        }
                    });
                });

            </script>



        }
        groupIndex++;
    }
}