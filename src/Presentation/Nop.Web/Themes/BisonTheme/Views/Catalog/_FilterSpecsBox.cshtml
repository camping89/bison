@model CatalogPagingFilteringModel.SpecificationFilterModel
@{
    var notFilteredItemsGroups = Model.NotFilteredItems.GroupBy(x => x.SpecificationAttributeName);
    var alreadyFilteredItemsGroups = Model.AlreadyFilteredItems.GroupBy(x => x.SpecificationAttributeName);
    var allFilterItemsGroups = Model.AllFilteredItems.GroupBy(x => x.SpecificationAttributeName);
}
@*@if (Model.Enabled)
    {
        <div class="product-filter product-spec-filter">
            <h3 class="title14">@T("Filtering.SpecificationFilter")</h3>
            <div class="filter-content">
                @if (Model.NotFilteredItems.Count > 0)
                {
                    <div class="available-items">
                        @foreach (var group in notFilteredItemsGroups)
                        {
                            var groupList = group.ToList();
                        <h3 class="title14">@groupList[0].SpecificationAttributeName</h3>
                            <ul class="group product-spec-group @(groupList.Any(x => !string.IsNullOrEmpty(x.SpecificationAttributeOptionColorRgb)) ? "product-spec-color" : null )">
                              @foreach (var spec in groupList)
                                {
                                    <li class="item @(!string.IsNullOrEmpty(spec.SpecificationAttributeOptionColorRgb) ? "color-item" : null)">
                                        <a href="@spec.FilterUrl">
                                            @if (string.IsNullOrEmpty(spec.SpecificationAttributeOptionColorRgb))
                                            {
                                                @spec.SpecificationAttributeOptionName
                                            }
                                            else
                                            {
                                                <div class="attribute-squares color-squares">
                                                    <span class="attribute-square-container" title="@spec.SpecificationAttributeOptionName">
                                                        <span class="attribute-square" style="background-color: @(spec.SpecificationAttributeOptionColorRgb);">&nbsp;</span>
                                                    </span>
                                                </div>
                                            }
                                        </a>
                                    </li>
                                }
                            </ul>
                        }
                    </div>
                }
                @if (Model.AlreadyFilteredItems.Count > 0)
                {
                    <div class="filtered-items current-shop ">
                        <h3 class="title14"> @T("Filtering.SpecificationFilter.CurrentlyFilteredBy")</h3>
                        <ul>
                            @foreach (var group in alreadyFilteredItemsGroups)
                            {
                                <li class="item">
                                    <strong>@group.First().SpecificationAttributeName</strong>:
                                    @group.ToList().Aggregate(string.Empty, (current, next) =>
                                        $"{(string.IsNullOrEmpty(current) ? string.Empty : $"{current} {T("Filtering.SpecificationFilter.Separator")}")}{next.SpecificationAttributeOptionName}")
                                </li>
                            }
                        </ul>
                    </div>
                    <div class="remove-filter">
                        <a class="clear-all black" href="@Model.RemoveFilterUrl">@T("Filtering.SpecificationFilter.Remove")</a>
                    </div>
                }
            </div>
        </div>
    }*@

@if (Model.Enabled)
{
    <div class="product-filter product-spec-filter filter">
        <h3 class="title-widget title18">@T("Filtering.SpecificationFilter")</h3>
        <div class="filter-group filter-content">
            @if (Model.AllFilteredItems.Count > 0)
            {
                <div class="available-items">
                    @foreach (var group in allFilterItemsGroups)
                    {
                        var groupList = group.ToList();
                        <h3 class="title14">@groupList[0].SpecificationAttributeName</h3>
                        <ul class="group product-spec-group @(groupList.Any(x => !string.IsNullOrEmpty(x.SpecificationAttributeOptionColorRgb)) ? "product-spec-color" : null )">
                            @foreach (var spec in groupList)
                            {

                                <li class="checkbox">
                                    <input data-type="chk_spec_" id="chk_spec_@spec.Id" class="DebuggedCheckbox checkbox" name="chk_spec_@spec.Id" value="@spec.Id" type="checkbox">
                                    <label class="DebuggedCheckbox_Label" for="chk_spec_@spec.Id"><span>@spec.SpecificationAttributeOptionName</span></label>
                                </li>
                            }
                        </ul>
                    }

                </div>
            }

        </div>
    </div>
}