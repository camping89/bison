@model Nop.Web.Models.Catalog.SearchModel
@{
    Layout = "_ColumnsTwo";

    //title
    Html.AddTitleParts(T("PageTitle.Search").Text);
    //page class
    Html.AppendPageCssClassParts("html-search-page");
}
@section Breadcrumb
    {
    <div class="bread-crumb">
        <a href="@Url.RouteUrl("HomePage")" class="silver" title="@T("Categories.Breadcrumb.Top")">@T("Categories.Breadcrumb.Top")</a>
        <strong class="color">@T("Search")</strong>
    </div>
}
@{
    //current category ID
    var currentCategoryId = 0;
    if (Url.ActionContext.RouteData.Values["controller"].ToString().Equals("catalog", StringComparison.InvariantCultureIgnoreCase) &&
        Url.ActionContext.RouteData.Values["action"].ToString().Equals("category", StringComparison.InvariantCultureIgnoreCase))
    {
        currentCategoryId = Convert.ToInt32(Url.ActionContext.RouteData.Values["categoryId"].ToString());
    }


    //current manufacturer ID
    var currentManufacturerId = 0;
    if (Url.ActionContext.RouteData.Values["controller"].ToString().Equals("catalog", StringComparison.InvariantCultureIgnoreCase) &&
        Url.ActionContext.RouteData.Values["action"].ToString().Equals("manufacturer", StringComparison.InvariantCultureIgnoreCase))
    {
        currentManufacturerId = Convert.ToInt32(Url.ActionContext.RouteData.Values["manufacturerId"].ToString());
    }


    //current product ID
    var currentProductId = 0;
    if (Url.ActionContext.RouteData.Values["controller"].ToString().Equals("product", StringComparison.InvariantCultureIgnoreCase) &&
        Url.ActionContext.RouteData.Values["action"].ToString().Equals("productdetails", StringComparison.InvariantCultureIgnoreCase))
    {
        currentProductId = Convert.ToInt32(Url.ActionContext.RouteData.Values["productId"].ToString());
    }

}
@section left
    {
    @await Component.InvokeAsync("Widget", new { widgetZone = "left_side_column_before" })
    @*@await Component.InvokeAsync("CategoryNavigation", new { currentCategoryId = currentCategoryId, currentProductId = currentProductId })*@
    @await Component.InvokeAsync("Widget", new { widgetZone = "left_side_column_after_category_navigation" })
    @*@await Component.InvokeAsync("ManufacturerNavigation", new { currentManufacturerId = currentManufacturerId, manufacturers = Model.Manufacturers })*@
    @await Component.InvokeAsync("VendorNavigation")
    @await Html.PartialAsync("_FilterAjax", Model.PagingFilteringContext.SpecificationFilter)
    @await Component.InvokeAsync("RecentlyViewedProductsBlock", new { productThumbPictureSize = 64 })
    @*@await Component.InvokeAsync("PopularProductTags")*@
    @await Component.InvokeAsync("PollBlock", new { systemKeyword = "LeftColumnPoll" })
    @await Component.InvokeAsync("Widget", new { widgetZone = "left_side_column_after" })
}
<script type="text/javascript" asp-location="Footer">
    $(function () {
        searchParameters();

        $('#btnSearch').on('click', function () {
            //$('#formSearch').submit();
            searchParameters();
        });
    });
</script>

<div class="content-shop shop-grid">
    <div class="shop-title-box">
        <h2 class="title18 title-box5">@T("Search")</h2>
    </div>
    <div class="search-input  form-my-account text-center" style="margin: 0 auto;">
        <form id="formSearch" method="get">
            <div class="fieldset">
                <div class="form-fields">
                    <div class="basic-search">
                        <div class="inputs">
                            <label asp-for="q">@T("Search.SearchTerm"):</label>
                            <input asp-for="q" class="search-text" />
                        </div>

                    </div>
                </div>
            </div>
            <div class="buttons">
                @*<input type="submit" class="button-1 search-button" value="@T("Search.Button")" />*@
                <input type="button" id="btnSearch" class="button-1 search-button" value="@T("Search.Button")" />
            </div>
        </form>
    </div>

    <hr />
    <div class="shop-title-box">
        <h2 class="title18 title-box5">@T("Search.Result")</h2>
        @await Html.PartialAsync("_CatalogSelectors", Model.PagingFilteringContext)

    </div>
    <div class="filter-ajax-result">

    </div>
</div>